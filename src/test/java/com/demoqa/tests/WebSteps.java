package com.demoqa.tests;

import com.demoqa.pages.Diagnoses;
import com.demoqa.pages.RegistrationFromPage;
import com.demoqa.pages.Vrt;
import io.qameta.allure.Step;

public class WebSteps {
    RegistrationFromPage registrationFromPage = new RegistrationFromPage();
    Diagnoses diagnoses = new Diagnoses();
    Vrt vrt = new Vrt();
    @Step("Авторизация")
    public void registration()
    {
        registrationFromPage.openPage()
                .userName("i.pokatilova")
                .passwordName("Uka7zluka")
                .setSubmit()
                .choice();
    }
    @Step("Добавляем случай в тубрегистр")
    public void addSluchai()
    {
        diagnoses.accounting()
                .nozreg()
                .nozregtub()
                .cases()
                .casesGrid()
                .casesGridpkm()
                .casesAdd()
                .casesSurname("Покатилова")
                .casesName("Автотест")
                .find()
                .gridPatient()
                .plus()
                .groupLkm()
                .group("Прочие")
                .dispVkladka()
                .dispDateVz()
                .date()
                .nauchet("при профосмотре")
                .dispDateUc()
                .date()
                .moNablud()
                .findMo()
                .codMo("07081")
                .okSluchai()
                .saveSluchai()
                .status();
    }

    @Step("Редактируем созданный случай")
    public void editSluchai() {
        diagnoses.pluSluchai()
                .messagefree()
                .contintwo()
                .editSluchai()
                .gridDiagLkm()
                .griDiag()
                .casesAdd()
                .mkbDiag()
                .serachDiag("A15.1")
                .okSluchai()
                .dateDiag()
                .date()
                .clinicForm("Врожденный туберкулез")
                .moDiag()
                .okSluchai()
                .docDiag()
                .okSluchai()
                .localization("бронхи")
                .dateLocal()
                .date()
                .phase("0 / Инфильтрации")
                .datePhase()
                .date()
                .saveDiag()
                .recordingDiag();


    }
    @Step("Редактирование диагноза")
    public void editDiagnoz() {
        diagnoses.griDiag()
                .editDiag()
                .combinedDiag()
                .serachDiag("A15.1")
                .okSluchai()
                .dateCombined()
                .date()
                .saveDiag()
                .messageDiag()
                .okSluchai()
                .clearDiag()
                .combinedDiag()
                .serachDiag("A15.2")
                .okSluchai()
                .dateCombined()
                .date()
                .editDiagtwo()
                .combinedDiagTwo()
                .serachDiag("A15.3")
                .okSluchai()
                .dateCombinedTwo()
                .date()
                .saveDiag()
                .recordingDiag();

    }
    @Step("Добавление заключения ЦВКК")
    public void addCvkk() {
        diagnoses.cvkk()
                .comissionGrid()
                .casesAdd()
                .targetLkm()
                .target("Прочие цели")
                .dateCvkk()
                .date()
                .resultCvkkLkm()
                .resultCvkk()
                .modeHimio("I режим")
                .saveDiag()
                .comissionGrid()
                .markNo()
                .dispVkladka()
                .moNablud()
                .findMo()
                .codMo("0234")
                .okSluchai()
                .apply()
                .comissionGrigTwoLkm()
                .comissionGrigTwo()
                .deleteCvkk()
                .сontinue()
                .comissionGridLkm()
                .comissionGrid()
                .casesAdd()
                .targetLkm()
                .target("Прочие цели")
                .dateCvkk()
                .date()
                .resultCvkkLkm()
                .resultCvkk()
                .modeHimio("I режим")
                .saveDiag()
                .comissionGrigTwoLkm()
                .comissionGrigTwo()
                .mark()
                .markDate()
                .date()
                .saveSluchai()
                .comissionGrigFree();
    }
    @Step("Добавление рекомандаций")
    public void addRec() {
        diagnoses.diag()
                .mbtGridLkm()
                .mbtGrid()
                .casesAdd()
                .mbtAllocationLKm()
                .mbtAllocation()
                .metodLkm()
                .metod()
                .dateMbt()
                .date()
                .luLkm()
                .lu("ШЛУ")
                .drugS()
                .findMo()
                .nameDrug("Antibiotic")
                .okSluchai()
                .dateDrug()
                .date()
                .saveSluchai()
                .mbtRecord()
                .mbtRecordLkm()
                .editDiag()
                .drugS()
                .findMo()
                .nameDrug("Apalcilline")
                .okSluchai()
                .saveSluchai()
                .drugGrid()
                .mbtRecord()
                .mbtRecordLkm()
                .deleteCvkk()
                .okdelete()
                .mtbRecordNo();

    }
    @Step("Удаление записи случая")
    public void deleteSluchai() {
        diagnoses.saveSluchai()
                .closeSluchai()
                .patientSearch()
                .filtrSurname("Покатилова")
                .filtrTake()
                .patient()
                .patientPkm()
                .deleteCvkk()
                .deleteNo()
                .patientPkm()
                .deleteCvkk()
                .deleteYes();
    }
    @Step("Добавление настроек регистра")
    public void addSettings() {
        diagnoses.settings()
                .settingsDP()
                .diagnos()
                .gridDiagnos()
                .add()
                .mkb()
                .mkbZa("A15.1")
                .end()
                .endTwo("A15.2")
                .type("Туберкулез легких")
                .oktwo()
                .message()
                .contin()
                .otmenaGiag()
                .gridDiagnos()
                .add()
                .mkb()
                .mkbZa("A15.7")
                .end()
                .endTwo("A15.7")
                .type("Туберкулез легких")
                .oktwo();
    }
    @Step("Редактирование настроек диагноза")
    public void editSettings() {
        diagnoses.page()
                .line()
                .linepkm()
                .edit()
                .type("Внелегочных туберкулез")
                .oktwo()
                .grid();
    }
    @Step("Добавление формы и локализации")
    public void addForm() {
        diagnoses.vkFormlok()
                .gridFormlok()
                .gridFormlokpkm()
                .addtwo()
                .kodlkm()
                .kod("777")
                .namelkm()
                .name("test")
                .calendar()
                .date()
                .okfre()
                .messagetwo()
                .contintwo()
                .klinformlkm()
                .klinform("Туберкулезная интоксикация у детей и подростков")
                .okfre()
                .okfour()
                .gridFormloktwo();

    }
    @Step("Добавление записи ВРТ")
    public void addVrt() {
        vrt.accountingTwo()
                .reestrVrt()
                .vrtGridLkm()
                .vrtGrid()
                .vrtAdd()
                .petientS()
                .name("Покатилова")
                .patinetSearch()
                .genInformation()
                .diagMkb()
                .codGiagLkm()
                .codGiag("Z34.0")
                .diagOk()
                .status()
                .statusTwo()
                .anamnez()
                .anamnezLifeLkm()
                .anamnezLife("Test")
                .genInformation()
                .message()
                .saveVrtVisible();
    }
    @Step("Редактирование записи ВРТ")
    public  void editVrt(){
        vrt.gridPatientLkm()
                .gridPatient()
                .editVrt()
                .genInformation()
                .status()
                .statusFree()
                .comission()
                .gridComission()
                .gridComissionLkm()
                .vrtAdd()
                .calendarComission()
                .dateComission()
                .conclusion()
                .eko()
                .diagzNap("Test")
                .moVrt("6202 - Городская поликлиника")
                .payment()
                .paymentTwo()
                .appeal()
                .appealTwo()
                .chairman("Adis A.A.")
                .employer("Adis A.A.")
                .okConclusion()
                .gridComissionTwo()
                .saveVrtVisible();

    }
    @Step("Удаление записи ВРТ")
    public void deleteVrt() {
        vrt.vrtGridLkm()
                .vrtGrid()
                .take()
                .gridPatientLkm()
                .gridPatient()
                .exclude()
                .yesButton()
                .uncoverDearch()
                .check()
                .take()
                .patientFree()
                .deleteVrt()
                .yesButton()
                .diagOk()
                .patientFree()
                .editVrt()
                .comission()
                .gridComission()
                .gridComissionLkm()
                .deleteVrt()
                .continueVrt()
                .otmena()
                .patientFree()
                .deleteVrt()
                .yesButton()
                .patientFreeNo();
    }
}

